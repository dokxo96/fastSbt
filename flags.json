{
  "components": {
    "fast-sbt.jsx/widget/": {
      "code": "const ModalCard = styled.div`\nposition: fixed;\nwidth: 100vw;\nheight:100vh;\n//width: 100%;\n//height:100%;\ntop: 72px;\nleft: 0;\noverflow:scroll; \npadding-bottom:100px;\nz-index: 1;\nbackground: rgba(0, 0, 0, 0.70);\n \n@media only screen and (max-width: 820px) {\n\n\n}\n@media only screen and (max-width: 480px) {\n\n}\n\n`;\n\nconst Header = styled.div`\nwidth:100%;\nheight: 50px;\nbackground: #000000;\ndisplay: flex;\nflex-direction:row;\njustify-content:center;\nalign-items: center;\ngap: 4px;\nflex-shrink:0;\n\n\n  `;\nconst Headerlabel = styled.label`\n  color: white;\n  font-family: Open Sans;\n  font-style\": normal;\n  font-weight: 400;\n  line-height: 120%;\n\n\n  `;\nconst CardStyled = styled.div`\nwidth: 80%;\nmargin-top:64px; \nbackground: #F8F8F9;\nborder-radius: 10px;\n\nmargin-left:auto;\nmargin-right:auto;\n\n\n@media only screen and (max-width: 480px) {\n\nwidth: 95%;\nmargin-top:12px;\n}\n\n  `;\nconst BodyForm = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-center;\n\nwidth: 100%;\nheight: auto;\npadding:12px 12px;\n\n\n@media only screen and (max-width: 480px) {\n  \n   \n   \n}\n  `;\nconst InputStyled = styled.input`\nbox-sizing: border-box;\ndisplay: flex;\nflex-direction: row;\nalign-items: flex-start;\npadding: 9px 10px;\nwidth: 100%;\nheight: 35px;\nfont-size: 12px;\nbackground: #FFFFFF;\nborder: 1px solid #D0D6D9;\nborder-radius: 8px;\n@media only screen and (max-width: 480px) {\n  \n \n}\n`;\nconst FooterForm = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-end;\n\nwidth: 100%;\nheight: auto;\npadding-right:12px;\n@media only screen and (max-width: 480px) {\n  \n   \n   \n}\n  `;\n\nconst FormsectionHouse_ = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\npadding: 0px;\n \nwidth: 33%;\nheight: 54px;\nflex: none;\ndisplay: none;\norder: 6;\nflex-grow: 0;\n@media only screen and (max-width: 480px) {\n  \n  \n  display: flex;\n}\n\n  `;\nconst Dropdown = styled.select`\nbox-sizing: border-box;\ndisplay: flex;\nflex-direction: row;\nalign-items: flex-start;\npadding: 0px 10px;\ngap: 10px;\nwidth: 100%;\nheight: 35px;\nbackground: #FFFFFF;\nborder: 1px solid #D0D6D9;\nborder-radius: 8px;\nflex: none;\norder: 1;\n\nfont-size:12px;\nfont-family: Open Sans\nfont-style: normal;\nfont-weight: 400;\nfont-size: 12px;\nline-height: 120%;\n \ndisplay: flex;\nalign-items: center;\n\ncolor: #828688;\n@media only screen and (max-width: 480px) {\n   \n}\n  `;\n\nconst H1styled = styled.h1`\n \n\nwidth: 100%;\nheight: 10px;\nfont-family: Open Sans\nfont-style: normal;\nfont-weight: 500;\nfont-size: 12px;\nline-height: 120%;\ncolor: #000000;\n`;\nconst H2styled = styled.h1`\n \nheight: 14px;\nfont-family: Open Sans\nfont-style: normal;\nfont-weight: 500;\nfont-size: 12px;\nline-height: 120%;\ndisplay: flex;\nalign-items: center;\ncolor: #000000;\nflex: none;\norder: 0;\nflex-grow: 0;\n`;\n\nconst MetaTitles = styled.div`\nwidth: 100%;\nheight: 12px;\nfont-family: Open Sans;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 11px;\nline-height: 120%;\ndisplay: flex;\nalign-items: center;\ncolor: #000000;\nflex: none;\norder: 0;\nflex-grow: 0;\nmargin-top:10px;\nmargin-bottom:10px;\n@media only screen and (max-width: 480px) {\n  \n   \n}\n  `;\n\nconst CompanyInputName = styled.input`\nbox-sizing: border-box;\ndisplay: flex;\nflex-direction: row;\nalign-items: flex-start;\npadding: 9px 10px;\n\nwidth: 100%;\nheight: 30px;\nbackground: #FFFFFF;\nborder: 1px solid #D0D6D9;\nborder-radius: 8px;\nflex: none;\norder: 1;\nflex-grow: 0;\nfont-family: Open Sans;\nfont-style: normal;\nfont-weight: 400;\nfont-size: 10px;\nline-height: 120%;\ndisplay: flex;\nalign-items: center;\ncolor: #828688;\n \n  `;\nconst AFDates = styled.div`\ndisplay: flex;  \nwidth:100%;\ngap:.5rem;\nflex-wrap: nowrap;\n@media only screen and (max-width: 480px) {\n \n}\n`;\nconst DateContItem = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\npadding: 0px;\nwidth: 49.5%;\nheight: 50px;\nflex: none;\norder: 0;\nflex-grow: 1;\nmargin-bottom:10px;\n\n@media only screen and (max-width: 480px) {\n  \n \n   \n}\n  `;\nconst CompanyInput = styled.input`\nbox-sizing: border-box;\ndisplay: flex;\nflex-direction: row;\nalign-items: flex-start;\npadding: 0px 10px;\nwidth: 100%;\nheight: 30px;\nbackground: #FFFFFF;\nborder: 1px solid #D0D6D9;\nborder-radius: 8px;\nflex: none;\norder: 1;\nflex-grow: 0;\nfont-family: Open Sans;\nfont-style: normal;\nfont-weight: 400;\nfont-size: 10px;\nline-height: 120%;\ndisplay: flex;\nalign-items: center;\ncolor: #828688;\n@media only screen and (max-width: 480px) {\n  \n  \n}\n  `;\nconst Submitcontainer = styled.div`\ndisplay: flex;\njustify-content: flex-end;\nalign-items: center;\ngap: 8px;\nmargin-bottom:16px;\n\n`;\nconst SubmitBtn = styled.button`\n display: flex;\nwidth: 107px;\npadding: 8px 12px;\njustify-content: center;\nalign-items: center;\ngap: 10px;\ncolor:#000;\ndisplay: flex;\nwidth: 107px;\npadding: 8px 12px;\njustify-content: center;\nalign-items: center;\ngap: 10px;\nborder-radius: 10px;\n border-width: 1px;\n  border: solid 1px transparent;\n \n \n  background-image: ${\n    state.Submitdisable\n      ? \"linear-gradient(#a4a39e, #cbcac8), radial-gradient(circle at top left,#000000, #000000);\"\n      : \"linear-gradient(#FFD50D, #FFD50D), radial-gradient(circle at top left,#F0E1CE, #F0E1CE);\"\n  }\n  background-origin: border-box;\n  background-clip: padding-box, border-box;\n@media only screen and (max-width: 480px) {\n \n}\n\n`;\n\nconst MetaCard = styled.div`\nbackground:#FFFFFF;\nborder-radius:.375rem;\nwidth: 100%;\nheight: 295px;\nmargin-top:20px;\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n@media only screen and (max-width: 480px) {\n  \n \n}\n  `;\n\nconst CancelBtn = styled.button`\n  display: flex;\nwidth: 107px;\npadding: 8px 12px;\njustify-content: center;\nalign-items: center;\ngap: 10px;\ncolor:#9333EA;\nborder-radius: 10px;\n border-width: 1px;\n  border: solid 1px #9333EA;\n \n \n  background-image: linear-gradient(#fff, #fff), radial-gradient(circle at top left,#F0E1CE, #F0E1CE);\n  background-origin: border-box;\n  background-clip: padding-box, border-box;\n@media only screen and (max-width: 480px) {\n \n}\n`;\nconst Rowcont = styled.div`\n display:flex;\n gap: .5rem;\n \n @media only screen and (max-width: 820px) {\n display:block;\n     gap: 0;\n}\n@media only screen and (max-width: 480px) {\n  display:block;\n      gap: 0;\n \n}\n`;\nconst Colcont = styled.div`\n\n\nmargin-top:.5rem;\n width:33.3%;\n @media only screen and (max-width: 820px) {\n width:100%;\n}\n@media only screen and (max-width: 480px) {\n width:100%;\n \n}\n`;\n\nconst HiddeableWidget = styled.div`\n  display: none;\n  @media (max-width: 480px) {\n    display: block;\n  }\n`;\nconst CustomCheckbox = styled.div`\n width:20px;\n height:20px;\n background:${\n   state.ischeckselected\n     ? \"linear-gradient(90deg, #9333EA 0%, #4F46E5 100%);\"\n     : \"#F8F8F9;\"\n }\nborder: medium solid ${\n  state.ischeckselected\n    ? \"linear-gradient(90deg, #9333EA 0%, #4F46E5 100%);\"\n    : \"black\"\n};\nborder-radius:4px;\n \n`;\nconst Reference = styled.input`\nbox-sizing: border-box;\ndisplay: flex;\nflex-direction: row;\nalign-items: flex-start;\npadding: 9px 10px;\nwidth: 100%;\nheight: 30px;\nbackground: #FFFFFF;\nborder: 1px solid #D0D6D9;\nborder-radius: 8px;\nfont-family: Open Sans,\nfont-style: normal,\nfont-weight: 400,\nfont-size: 10px,\nheight: 60px,\n\n@media only screen and (max-width: 480px) {\n  \n \n}\n  `;\n\nconst Metarow = styled.div`\nflex-shrink: 0;\n    width: 100%;\n    max-width: 100%;\n    padding-right: calc(var(--bs-gutter-x) * .5);\n    padding-left: calc(var(--bs-gutter-x) * .5);\n    margin-top: var(--bs-gutter-y);\n        margin-left: 1px;\n`;\nconst Separator = styled.div`\nwidth:100%;\nheight:2px;\nbackground-color: #D0D6D966;\nborder: solid 0px transparent;\nmargin-top:10px;\n`;\nconst NDCicon =\n  \"https://emerald-related-swordtail-341.mypinata.cloud/ipfs/QmP5CETfUsGFqdcsnrfPgUk3NvRh78TGZcX2srfCVFuvqi?_gl=1*faq1pt*_ga*Mzc5OTE2NDYyLjE2ODg1MTY4MTA.*_ga_5RMPXG14TE*MTY4OTg3Njc1OC4xMS4xLjE2ODk4NzY4MjYuNjAuMC4w\";\nconst CheckIcon =\n  \"https://emerald-related-swordtail-341.mypinata.cloud/ipfs/QmVGE45rLuHiEHh8RPfL11QsQBXVDfmdV3pevZU7CG1ucg?preview=1&_gl=1*1dpaowv*_ga*Mzc5OTE2NDYyLjE2ODg1MTY4MTA.*_ga_5RMPXG14TE*MTY4OTg4MDMyOS4xMi4xLjE2ODk4ODA3MTAuMTkuMC4w\";\n// State\nState.init({\n  theme: \"\",\n  Dao_Contract: \"\",\n  Issuer_selected: null,\n  Issuer_filled:\"\",\n  Receiver: \"\",\n  ClassIdSelected: \"\",\n  IssuedAT: \"\",\n  ExpiresAt: \"\",\n  Referencelink: \"\",\n  Referencehash: \"\",\n\n  ischeckselected: false,\n  Submitdisable: true,\n});\n\nconst validatedInputs = () => {\n  console.log(state);\n  const isEmpty = (str) => str.trim() === \"\";\n  const isFalse = (check) => check === false;\n  let isValid = true;\n  /*\n  if (img.cid === null) {\n    State.update({ error_msg: \"Pic a image\" });\n    return false;\n  }*/\n  if (isEmpty(state.Dao_Contract)) {\n    State.update({ error_msg: \"Write the DAO contract\", Submitdisable: true });\n\n    return (isValid = false);\n  }\n  if (isEmpty(state.Issuer_selected)) {\n    State.update({ error_msg: \"Select an issuer\", Submitdisable: true });\n\n    return (isValid = false);\n  }\n  // the user will provide a new issuer\n  if (state.Issuer_selected===\"showinput\") {\n    if(isEmpty(state.Issuer_filled) ){\n        State.update({ error_msg: \"provide an issuer\", Submitdisable: true });\n\n        return (isValid = false);\n    }\n\n  }\n  if (isEmpty(state.Receiver)) {\n    State.update({ error_msg: \"Write the receiver\", Submitdisable: true });\n\n    return (isValid = false);\n  }\n  if (state.ischeckselected === true) {\n    console.log(\"se activo la meta\");\n    if (isEmpty(state.ClassIdSelected)) {\n      console.log(\"select toke\");\n\n      State.update({ error_msg: \"Select a token class\", Submitdisable: true });\n\n      return (isValid = false);\n    }\n    if (isEmpty(state.IssuedAT)) {\n      State.update({ error_msg: \"pic and issued date\", Submitdisable: true });\n\n      return (isValid = false);\n    }\n    if (isEmpty(state.ExpiresAt)) {\n      State.update({ error_msg: \"pic and expires date\", Submitdisable: true });\n\n      return (isValid = false);\n    }\n    if (!isEmpty(state.Referencelink)) {\n      return (isValid = false);\n    }\n    if (!isEmpty(state.Referencehash)) {\n      return (isValid = false);\n    }\n  }\n\n  if (isEmpty(state.Memo)) {\n    State.update({ error_msg: \"Write the memo\", Submitdisable: true });\n\n    return (isValid = false);\n  }\n\n  State.update({ Submitdisable: false });\n\n  return isValid;\n};\n\nconst Submitform = () => {\n  if (validatedInputs()) {\n    console.log(\"es valido\");\n  } else {\n    console.log(\"no es valido\");\n  }\n};\nreturn (\n  <ModalCard>\n    <Header>\n      <img src={NDCicon} />\n      <Headerlabel>FAST-SBT</Headerlabel>\n    </Header>\n\n    <CardStyled name=\"compose\" class=\"Cardstyled\">\n      <BodyForm class=\"mx-auto\">\n        <Rowcont>\n          <Colcont>\n            <H1styled>DAO</H1styled>\n            <InputStyled\n              type=\"text\"\n              placeholder=\"Input DAO contract address\"\n              value={state.Dao_Contract}\n              onChange={(e) => {\n                State.update({ Dao_Contract: e.target.value });\n                validatedInputs();\n              }}\n            />\n          </Colcont>\n          <Colcont>\n            <H1styled>Issuer</H1styled>\n            <Dropdown\n              placeholder=\"Input DAO contract address\"\n              value={state.Issuer_selected}\n              onChange={(e) => {\n                State.update({ Issuer_selected: e.target.value });\n                validatedInputs();\n              }}\n            >\n              <option default value=\"\">\n                Select issuer\n              </option>\n             \n              {}\n              <option value=\"nothing\">more options from fetch</option>\n              <option default value=\"showinput\">\n                Other-- write down.\n              </option>\n            </Dropdown>\n          </Colcont>\n          { state.Issuer_selected===\"showinput\"?\n           <Colcont>\n           <H1styled>Enter issuer</H1styled>\n           <InputStyled\n             type=\"text\"\n             placeholder=\"Input Issuer\"\n             value={state.Issuer_filled}\n             onChange={(e) => {\n               State.update({ Issuer_filled: e.target.value });\n               validatedInputs();\n             }}\n           />\n         </Colcont>:\n         <></>\n          }\n          <Colcont>\n            <H1styled>Receiver</H1styled>\n            <InputStyled\n              type=\"text\"\n              placeholder=\"dokxo.near\"\n              value={state.Receiver}\n              onChange={(e) => {\n                State.update({ Receiver: e.target.value });\n                validatedInputs();\n              }}\n            />\n          </Colcont>\n        </Rowcont>\n\n        <div className=\"d-flex flex-column mt-2\">\n          <div class=\"d-flex\">\n            <H1styled>Metadata</H1styled>\n            <CustomCheckbox\n              onClick={() => {\n                State.update({ ischeckselected: !state.ischeckselected });\n                validatedInputs();\n              }}\n            >\n              {state.ischeckselected ? (\n                <img\n                  style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    \"object-fit\": \"cover\",\n                    \"vertical-align\": \" initial\",\n                  }}\n                  src={CheckIcon}\n                />\n              ) : (\n                <></>\n              )}\n            </CustomCheckbox>\n          </div>\n          {state.ischeckselected ? (\n            <MetaCard>\n              <div class=\"row  col-sm-12  mx-0  gap-1   \">\n                <Metarow name=\"Classid\">\n                  <MetaTitles>{\"Class id\"}</MetaTitles>\n                  <div>\n                    <Dropdown\n                      value={state.ClassIdSelected}\n                      onChange={(e) => {\n                        State.update({ ClassIdSelected: e.target.value });\n                        validatedInputs();\n                      }}\n                    >\n                      <option default value=\"\">\n                        Select token class id\n                      </option>\n                      {}\n                      <option value=\"nothing\">more options from fetch</option>\n                    </Dropdown>\n                  </div>\n                </Metarow>\n                <Metarow>\n                  {\" \"}\n                  <AFDates name=\"AFdates\">\n                    <DateContItem>\n                      <MetaTitles>{\"Issued at\"}</MetaTitles>\n                      <CompanyInput\n                        type=\"date\"\n                        value={state.IssuedAT}\n                        onChange={(e) => {\n                          State.update({ IssuedAT: e.target.value });\n                          validatedInputs();\n                        }}\n                      ></CompanyInput>\n                    </DateContItem>\n                    <DateContItem>\n                      <MetaTitles>{\"Expires at\"}</MetaTitles>\n                      <CompanyInput\n                        type=\"date\"\n                        value={state.ExpiresAt}\n                        onChange={(e) => {\n                          State.update({ ExpiresAt: e.target.value });\n                          validatedInputs();\n                        }}\n                      ></CompanyInput>\n                    </DateContItem>\n                  </AFDates>\n                </Metarow>\n\n                <Metarow>\n                  <MetaTitles>\n                    {\"Reference = link to a JSON file (eg, IPFS).\"}\n                  </MetaTitles>\n\n                  <div>\n                    <CompanyInput\n                      value={state.Reference}\n                      placeholder=\"Write your reference (optional)\"\n                      onChange={(e) => {\n                        State.update({ Reference: e.target.value });\n                      }}\n                    />\n                  </div>\n                </Metarow>\n\n                <Metarow>\n                  <MetaTitles>\n                    {\"Reference hash = Base64-encoded sha256 hash of JSON.\"}\n                  </MetaTitles>\n\n                  <div style={{ \"font-size\": \"10px\" }}>\n                    <CompanyInput\n                      value={state.Reference}\n                      placeholder=\"Write your reference hash (optional)\"\n                      onChange={(e) => {\n                        State.update({ Reference: e.target.value });\n                      }}\n                    />\n                  </div>\n                </Metarow>\n              </div>\n            </MetaCard>\n          ) : (\n            <Separator></Separator>\n          )}\n\n          <div className=\"d-flex flex-column mt-2\">\n            <H1styled>Memo</H1styled>\n            <InputStyled\n              type=\"text\"\n              placeholder=\"Write a memo\"\n              value={state.Memo}\n              onChange={(e) => {\n                State.update({ Memo: e.target.value.substring(0,200) });\n                validatedInputs();\n              }}\n            />\n            <div class=\"row justify-enda \">\n            <a>{state.Memo.length}</a>\n\n            </div>\n          </div>\n        </div>\n      </BodyForm>\n\n      <FooterForm name=\"Footerform\">\n        <Submitcontainer>\n          <SubmitBtn\n            disabled={status.Submitdisable ? true : false}\n            onClick={() => {\n              Submitform();\n            }}\n          >\n            {\" \"}\n            Submit{\" \"}\n          </SubmitBtn>\n        </Submitcontainer>\n      </FooterForm>\n    </CardStyled>\n  </ModalCard>\n);\n"
    },
    "fast-sbt copy.jsx/widget/": {
      "code": "\n\nconst SubmitBtn = styled.button`\ndisplay: flex;\nwidth: 107px;\npadding: 8px 12px;\njustify-content: center;\nalign-items: center;\ngap: 10px;\ncolor:#000;\ndisplay: flex;\nwidth: 107px;\npadding: 8px 12px;\njustify-content: center;\nalign-items: center;\ngap: 10px;\nborder-radius: 10px;\n border-width: 1px;\n  border: solid 1px transparent;\n \n \n  background-image: ${\n    state.Submitdisable\n      ? \"linear-gradient(#a4a39e, #cbcac8), radial-gradient(circle at top left,#000000, #000000);\"\n      : \"linear-gradient(#FFD50D, #FFD50D), radial-gradient(circle at top left,#F0E1CE, #F0E1CE);\"\n  }\n  background-origin: border-box;\n  background-clip: padding-box, border-box;\n@media only screen and (max-width: 480px) {\n \n}\n\n`;\n\nconst CustomCheckbox = styled.div`\n width:20px;\n height:20px;\n background:${\n   state.ischeckselected\n     ? \"linear-gradient(90deg, #9333EA 0%, #4F46E5 100%);\"\n     : \"#F8F8F9;\"\n }\nborder: medium solid ${\n  state.ischeckselected\n    ? \"linear-gradient(90deg, #9333EA 0%, #4F46E5 100%);\"\n    : \"black\"\n};\nborder-radius:4px;\n \n`;\n \nconst cssFont = fetch(\n  \"https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800\"\n).body;\nconst css = fetch(\n  \"https://raw.githubusercontent.com/dokxo96/fastSbt/master/fastsbt.css?token=GHSAT0AAAAAACEQ4SVRD7BVOYKVKF5B4FEAZF36DWQ\"\n).body;\n\nif (!cssFont || !css) return \"\";\nif (!state.theme) {\n  State.update({\n    theme: styled.div`\n    font-family: Manrope, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n    ${cssFont}\n    ${css}\n`,\n\n  });\n}\nconst Theme = state.theme;\nconst NDCicon =\n  \"https://emerald-related-swordtail-341.mypinata.cloud/ipfs/QmP5CETfUsGFqdcsnrfPgUk3NvRh78TGZcX2srfCVFuvqi?_gl=1*faq1pt*_ga*Mzc5OTE2NDYyLjE2ODg1MTY4MTA.*_ga_5RMPXG14TE*MTY4OTg3Njc1OC4xMS4xLjE2ODk4NzY4MjYuNjAuMC4w\";\nconst CheckIcon =\n  \"https://emerald-related-swordtail-341.mypinata.cloud/ipfs/QmVGE45rLuHiEHh8RPfL11QsQBXVDfmdV3pevZU7CG1ucg?preview=1&_gl=1*1dpaowv*_ga*Mzc5OTE2NDYyLjE2ODg1MTY4MTA.*_ga_5RMPXG14TE*MTY4OTg4MDMyOS4xMi4xLjE2ODk4ODA3MTAuMTkuMC4w\";\n// State\nState.init({\n  theme: \"\",\n  Dao_Contract: \"\",\n  Issuer_selected: null,\n  Issuer_filled:\"\",\n  Receiver: \"\",\n  ClassIdSelected: \"\",\n  IssuedAT: \"\",\n  ExpiresAt: \"\",\n  Referencelink: \"\",\n  Referencehash: \"\",\n\n  ischeckselected: false,\n  Submitdisable: true,\n});\n\nconst validatedInputs = () => {\n  console.log(state);\n  const isEmpty = (str) => str.trim() === \"\";\n  const isFalse = (check) => check === false;\n  let isValid = true;\n  /*\n  if (img.cid === null) {\n    State.update({ error_msg: \"Pic a image\" });\n    return false;\n  }*/\n  if (isEmpty(state.Dao_Contract)) {\n    State.update({ error_msg: \"Write the DAO contract\", Submitdisable: true });\n\n    return (isValid = false);\n  }\n  if (isEmpty(state.Issuer_selected)) {\n    State.update({ error_msg: \"Select an issuer\", Submitdisable: true });\n\n    return (isValid = false);\n  }\n  // the user will provide a new issuer\n  if (state.Issuer_selected===\"showinput\") {\n    if(isEmpty(state.Issuer_filled) ){\n        State.update({ error_msg: \"provide an issuer\", Submitdisable: true });\n\n        return (isValid = false);\n    }\n\n  }\n  if (isEmpty(state.Receiver)) {\n    State.update({ error_msg: \"Write the receiver\", Submitdisable: true });\n\n    return (isValid = false);\n  }\n  if (state.ischeckselected === true) {\n    console.log(\"se activo la meta\");\n    if (isEmpty(state.ClassIdSelected)) {\n      console.log(\"select toke\");\n\n      State.update({ error_msg: \"Select a token class\", Submitdisable: true });\n\n      return (isValid = false);\n    }\n    if (isEmpty(state.IssuedAT)) {\n      State.update({ error_msg: \"pic an issued date\", Submitdisable: true });\n\n      return (isValid = false);\n    }\n    if (isEmpty(state.ExpiresAt)) {\n      State.update({ error_msg: \"pic an expires date\", Submitdisable: true });\n\n      return (isValid = false);\n    }\n    if (!isEmpty(state.Referencelink)) {\n      return (isValid = false);\n    }\n    if (!isEmpty(state.Referencehash)) {\n      return (isValid = false);\n    }\n  }\n\n  if (isEmpty(state.Memo)) {\n    State.update({ error_msg: \"Write the memo\", Submitdisable: true });\n\n    return (isValid = false);\n  }\n\n  State.update({ Submitdisable: false });\n\n  return isValid;\n};\n\nconst Submitform = () => {\n  if (validatedInputs()) {\n    console.log(\"es valido\");\n  } else {\n    console.log(\"no es valido\");\n  }\n};\nreturn (\n  <Theme>< div class=\"ModalCard\">\n    <div class=\"Header\">\n      <img src={NDCicon} />\n      <label class=\"Headerlabel\">FAST-SBT</label>\n    </div>\n\n    <div class=\"Cardstyled\" name=\"card\" >\n      <div class=\" BodyForm mx-auto\">\n        <div class=\"Rowcont\">\n          <div class=\"Colcont\">\n            <h1 class=\"H1styled\">DAO</h1>\n            <input class=\"InputStyled\"\n              type=\"text\"\n              placeholder=\"Input DAO contract address\"\n              value={state.Dao_Contract}\n              onChange={(e) => {\n                State.update({ Dao_Contract: e.target.value });\n                validatedInputs();\n              }}\n            />\n          </div>\n          <div class=\"Colcont\">\n            <h1 class=\"H1styled\">Issuer</h1>\n            <select class=\"Dropdown\"\n              placeholder=\"Input DAO contract address\"\n              value={state.Issuer_selected}\n              onChange={(e) => {\n                State.update({ Issuer_selected: e.target.value });\n                validatedInputs();\n              }}\n            >\n              <option default value=\"\">\n                Select issuer\n              </option>\n             \n              {}\n              <option value=\"nothing\">more options from fetch</option>\n              <option default value=\"showinput\">\n                Other-- write down.\n              </option>\n            </select>\n          </div>\n          { state.Issuer_selected===\"showinput\"?\n           <div class=\"Colcont\">\n           <h1 class=\"H1styled\">Enter issuer</h1>\n           <input class=\"InputStyled\"\n             type=\"text\"\n             placeholder=\"Input Issuer\"\n             value={state.Issuer_filled}\n             onChange={(e) => {\n               State.update({ Issuer_filled: e.target.value });\n               validatedInputs();\n             }}\n           />\n         </div>:\n         <></>\n          }\n          <div class=\"Colcont\">\n            <h1 class=\"H1styled\">Receiver</h1>\n            <input class=\"InputStyled\"\n              type=\"text\"\n              placeholder=\"dokxo.near\"\n              value={state.Receiver}\n              onChange={(e) => {\n                State.update({ Receiver: e.target.value });\n                validatedInputs();\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"d-flex flex-column mt-2\">\n          <div class=\"d-flex\">\n            <h1 class=\"H1styled\">Metadata</h1>\n            <CustomCheckbox\n              onClick={() => {\n                State.update({ ischeckselected: !state.ischeckselected });\n                validatedInputs();\n              }}\n            >\n              {state.ischeckselected ? (\n                <img\n                  style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    \"object-fit\": \"cover\",\n                    \"vertical-align\": \" initial\",\n                  }}\n                  src={CheckIcon}\n                />\n              ) : (\n                <></>\n              )}\n            </CustomCheckbox>\n          </div>\n          {state.ischeckselected ? (\n            <div class=\"MetaCard\">\n              <div class=\"row  col-sm-12  mx-0  gap-1   \">\n                <div class=\"Metarow\" name=\"Classid\">\n                  <div  class=\"MetaTitles\">{\"Class id\"}</div>\n                  <div>\n                    <select class=\"Dropdown\"\n                      value={state.ClassIdSelected}\n                      onChange={(e) => {\n                        State.update({ ClassIdSelected: e.target.value });\n                        validatedInputs();\n                      }}\n                    >\n                      <option default value=\"\">\n                        Select token class id\n                      </option>\n                      {}\n                      <option value=\"nothing\">more options from fetch</option>\n                    </select>\n                  </div>\n                </div>\n                <div class=\"Metarow\">\n                  {\" \"}\n                  <div  class=\"AFDates\" name=\"AFdates\">\n                    <div  class=\"DateContItem\">\n                      <div  class=\"MetaTitles\">{\"Issued at\"}</div>\n                      <input class=\"FormInput\"\n                        type=\"date\"\n                        value={state.IssuedAT}\n                        onChange={(e) => {\n                          State.update({ IssuedAT: e.target.value });\n                          validatedInputs();\n                        }}\n                      />\n                    </div>\n                    <div  class=\"DateContItem\">\n                      <div  class=\"MetaTitles\">{\"Expires at\"}</div>\n                      <input class=\"FormInput\"\n                        type=\"date\"\n                        value={state.ExpiresAt}\n                        onChange={(e) => {\n                          State.update({ ExpiresAt: e.target.value });\n                          validatedInputs();\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"Metarow\">\n                  <div  class=\"MetaTitles\">\n                    {\"Reference = link to a JSON file (eg, IPFS).\"}\n                  </div>\n\n                  <div>\n                    <input class=\"FormInput\"\n                      value={state.Reference}\n                      placeholder=\"Write your reference (optional)\"\n                      onChange={(e) => {\n                        State.update({ Reference: e.target.value });\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div class=\"Metarow\">\n                  <div  class=\"MetaTitles\">\n                    {\"Reference hash = Base64-encoded sha256 hash of JSON.\"}\n                  </div>\n\n                  <div style={{ \"font-size\": \"10px\" }}>\n                    <input class=\"FormInput\"\n                      value={state.Reference}\n                      placeholder=\"Write your reference hash (optional)\"\n                      onChange={(e) => {\n                        State.update({ Reference: e.target.value });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div class=\"Separator\"></div>\n          )}\n\n          <div className=\"d-flex flex-column mt-2\">\n            <h1 class=\"H1styled\">Memo</h1>\n            <input class=\"InputStyled\"\n              type=\"text\"\n              placeholder=\"Write a memo\"\n              value={state.Memo}\n              onChange={(e) => {\n                State.update({ Memo: e.target.value.substring(0,200) });\n                validatedInputs();\n              }}\n            />\n            <div class=\"row justify-enda \">\n            <a>{state.Memo.length}</a>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"FooterForm\" name=\"Footerform\">\n        <div class=\"Submitcontainer\">\n          <SubmitBtn\n            disabled={status.Submitdisable ? true : false}\n            onClick={() => {\n              Submitform();\n            }}\n          >\n            {\" \"}\n            Submit{\" \"}\n          </SubmitBtn>\n        </div>\n      </div>\n    </div>\n  </div>\n  </Theme>\n  \n);\n"
    }
  }
}